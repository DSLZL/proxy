name: Full Proxy Parser

on:
  workflow_dispatch:

env:
  SUBSCRIPTION_URL: "https://raw.githubusercontent.com/aiboboxx/v2rayfree/main/v2"

jobs:
  full-parse:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install tools
      run: |
        sudo apt-get update
        sudo apt-get install -y jq python3-pip
        pip install beautifulsoup4

    - name: Decode and parse
      run: |
        mkdir -p output
        
        # 1. 下载原始内容
        curl -s "$SUBSCRIPTION_URL" -o output/original.txt
        
        # 2. 多重解码尝试
        decode_failed=false
        base64 -d output/original.txt > output/decoded.txt 2>/dev/null || decode_failed=true
        
        if $decode_failed; then
          echo "尝试Base64解码失败，使用原始内容"
          cp output/original.txt output/decoded.txt
        fi

        # 3. 使用Python全面解析
        cat << 'EOF' > parse_proxies.py
        import re
        import json
        from bs4 import BeautifulSoup

        with open('output/decoded.txt', 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()

        # 尝试解析HTML格式
        soup = BeautifulSoup(content, 'html.parser')
        text_content = soup.get_text() if soup.find() else content

        # 匹配所有可能格式的vmess链接
        vmess_links = re.findall(
            r'(vmess://[A-Za-z0-9_-]+(?:=[A-Za-z0-9_-]*)?(?:/[A-Za-z0-9_-]*)?(?:\?[A-Za-z0-9_-]+(?:=[A-Za-z0-9_-]*)?(?:&[A-Za-z0-9_-]+(?:=[A-Za-z0-9_-]*)?)*)',
            text_content,
            re.MULTILINE
        )

        # 去重并验证JSON格式
        valid_links = []
        seen = set()
        for link in vmess_links:
            if link not in seen:
                try:
                    json_str = base64.b64decode(link[8:] + '==').decode('utf-8')
                    json.loads(json_str)  # 验证是否为有效JSON
                    valid_links.append(link)
                    seen.add(link)
                except:
                    continue

        with open('output/vmess_all.txt', 'w') as f:
            f.write('\n'.join(valid_links))
        EOF

        python3 parse_proxies.py
        
        # 4. 统计结果
        echo "解析结果："
        wc -l output/vmess_all.txt
        echo "前10个代理示例："
        head -n 10 output/vmess_all.txt

    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: parsing-results
        path: |
          output/original.txt
          output/decoded.txt
          output/vmess_all.txt